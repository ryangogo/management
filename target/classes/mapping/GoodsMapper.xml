<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dafeng.management.goods.dao.GoodsMapper" >
  <resultMap id="BaseResultMap" type="com.dafeng.management.goods.entity.Goods" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="goods_name" property="goodsName" jdbcType="VARCHAR" />
    <result column="package_unit" property="packageUnit" jdbcType="VARCHAR" />
    <result column="specifications" property="specifications" jdbcType="DECIMAL" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from goods
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.dafeng.management.goods.entity.Goods" >
    insert into goods (id, goods_name, package_unit, 
      specifications, create_date)
    values (#{id,jdbcType=INTEGER}, #{goodsName,jdbcType=VARCHAR}, #{packageUnit,jdbcType=VARCHAR}, 
      #{specifications,jdbcType=DECIMAL}, #{createDate,jdbcType=TIMESTAMP})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.dafeng.management.goods.entity.Goods" >
    update goods
    set goods_name = #{goodsName,jdbcType=VARCHAR},
      package_unit = #{packageUnit,jdbcType=VARCHAR},
      specifications = #{specifications,jdbcType=DECIMAL},
      create_date = #{createDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select id, goods_name, package_unit, specifications, create_date
    from goods
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select id, goods_name, package_unit, specifications, create_date
    from goods
  </select>

  <select id="list" resultMap="BaseResultMap" parameterType="com.dafeng.management.goods.entity.Goods" >
    select id, goods_name, package_unit, specifications, create_date
    from goods
    <where>
      <if test="goodsName != null and goodsName != ''">goods_name like concat('%',#{goodsName},'%')</if>
    </where>
  </select>

</mapper>